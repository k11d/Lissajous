[gd_scene load_steps=8 format=2]

[ext_resource path="res://lib/v2/Components.gd" type="Script" id=1]
[ext_resource path="res://assets/ball.png" type="Texture" id=2]
[ext_resource path="res://lib/v2/Buttons.gd" type="Script" id=3]
[ext_resource path="res://assets/Pixel-UniCode.ttf" type="DynamicFontData" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D


#export(NodePath) var target_node_path setget update_target
export(float) var x_radius = 80.0
export(float) var y_radius = 80.0
export(float, -6.28, 6.28, 0.01) var x_angle_offset := 0.0
export(float, -6.28, 6.28, 0.01) var y_angle_offset := 0.0
export(float, -6.28, 6.28, 0.01) var x_angle_increment := 0.06
export(float, -6.28, 6.28, 0.01) var y_angle_increment := 0.06

export(NodePath) var target_path = null setget update_target


class Target:
    
    var target : Node
    var target_origin := Vector2.ZERO
    
    func _init(_target) -> void:
        target = _target

var target : Target

        
func update_target(tpath):
    target_path = tpath
    if target_path:
        target = Target.new(get_node(target_path))


func _process(delta: float) -> void:
    $Components.update_positions()
    if !target:
        if target_path:
            target = Target.new(get_node(target_path))
    
    var tpos : Vector2
    if target:
        if target.target:
            tpos = Vector2($Components.x_value, $Components.y_value) + target.target_origin
            target.target.position = tpos
    else:
        tpos = Vector2($Components.x_value, $Components.y_value)        
    
        
    if $Composite.visible:
        $Composite/Sprite.position = tpos
        $Composite/Line2D.add_point(tpos)


func _on_BtnC_pressed() -> void:
    $Composite.visible = !$Composite.visible


func _on_BtnTarget_pressed() -> void:
    if target:
        target.target.visible = !target.target.visible


func _on_BtnClear_pressed() -> void:
    $Composite/Line2D.clear_points()


func _on_LineEdit_text_entered(new_text: String) -> void:
    $Components.x_theta += float(new_text)
    $Menu/Buttons/LineEdit.text = ''
    $Menu/Buttons/LineEdit2.text = ''
    _on_BtnClear_pressed()

func _on_LineEdit2_text_entered(new_text: String) -> void:
    $Components.y_theta += float(new_text)
    $Menu/Buttons/LineEdit.text = ''
    $Menu/Buttons/LineEdit2.text = ''
    _on_BtnClear_pressed()

"

[sub_resource type="DynamicFont" id=2]
size = 28
font_data = ExtResource( 4 )

[sub_resource type="Theme" id=3]
default_font = SubResource( 2 )

[node name="Tracer" type="Node2D"]
script = SubResource( 1 )

[node name="Components" type="Position2D" parent="."]
position = Vector2( -1, 0 )
script = ExtResource( 1 )

[node name="X" type="Position2D" parent="Components"]

[node name="Sprite" type="Sprite" parent="Components/X"]
modulate = Color( 0.996078, 0.0235294, 0.0235294, 0.509804 )
texture = ExtResource( 2 )

[node name="Y" type="Position2D" parent="Components"]

[node name="Sprite" type="Sprite" parent="Components/Y"]
modulate = Color( 0.0313726, 1, 0.247059, 0.509804 )
texture = ExtResource( 2 )

[node name="Composite" type="Position2D" parent="."]
position = Vector2( -2, -1 )

[node name="Sprite" type="Sprite" parent="Composite"]
self_modulate = Color( 0.0666667, 0.490196, 0.980392, 0.917647 )
texture = ExtResource( 2 )

[node name="Line2D" type="Line2D" parent="Composite"]

[node name="Menu" type="Node2D" parent="."]
position = Vector2( -16.4, -20 )

[node name="Buttons" type="HBoxContainer" parent="Menu"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -63.9081
margin_right = 102.092
margin_bottom = 38.0
theme = SubResource( 3 )
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BtnClose" type="Button" parent="Menu/Buttons"]
margin_right = 28.0
margin_bottom = 42.0
toggle_mode = true
pressed = true
text = "    "

[node name="BtnX" type="Button" parent="Menu/Buttons"]
margin_left = 32.0
margin_right = 58.0
margin_bottom = 42.0
toggle_mode = true
pressed = true
text = "X"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BtnY" type="Button" parent="Menu/Buttons"]
margin_left = 62.0
margin_right = 85.0
margin_bottom = 42.0
toggle_mode = true
pressed = true
text = "Y"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BtnC" type="Button" parent="Menu/Buttons"]
margin_left = 89.0
margin_right = 112.0
margin_bottom = 42.0
toggle_mode = true
pressed = true
text = "S"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BtnTarget" type="Button" parent="Menu/Buttons"]
margin_left = 116.0
margin_right = 139.0
margin_bottom = 42.0
size_flags_horizontal = 13
size_flags_vertical = 13
toggle_mode = true
pressed = true
text = "T"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BtnClear" type="Button" parent="Menu/Buttons"]
margin_left = 143.0
margin_right = 166.0
margin_bottom = 42.0
size_flags_horizontal = 13
size_flags_vertical = 13
text = "_"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LineEdit" type="LineEdit" parent="Menu/Buttons"]
margin_left = 170.0
margin_right = 228.0
margin_bottom = 42.0
placeholder_text = "xoff"

[node name="LineEdit2" type="LineEdit" parent="Menu/Buttons"]
margin_left = 232.0
margin_right = 290.0
margin_bottom = 42.0
placeholder_text = "yoff"
[connection signal="mouse_entered" from="Menu/Buttons/BtnClose" to="Menu/Buttons" method="_on_BtnClose_mouse_entered"]
[connection signal="mouse_exited" from="Menu/Buttons/BtnClose" to="Menu/Buttons" method="_on_BtnClose_mouse_exited"]
[connection signal="pressed" from="Menu/Buttons/BtnClose" to="Menu/Buttons" method="_on_BtnClose_pressed"]
[connection signal="pressed" from="Menu/Buttons/BtnX" to="Components" method="_on_BtnX_pressed"]
[connection signal="pressed" from="Menu/Buttons/BtnY" to="Components" method="_on_BtnY_pressed"]
[connection signal="pressed" from="Menu/Buttons/BtnC" to="." method="_on_BtnC_pressed"]
[connection signal="pressed" from="Menu/Buttons/BtnTarget" to="." method="_on_BtnTarget_pressed"]
[connection signal="pressed" from="Menu/Buttons/BtnClear" to="." method="_on_BtnClear_pressed"]
[connection signal="text_entered" from="Menu/Buttons/LineEdit" to="." method="_on_LineEdit_text_entered"]
[connection signal="text_entered" from="Menu/Buttons/LineEdit2" to="." method="_on_LineEdit2_text_entered"]
